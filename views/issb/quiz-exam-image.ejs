<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Mission School is ready to fill your Mission by providing you support">
    <meta property="og:title" content="Mission School">
    <meta property="og:description" content="Mission School is ready to fill your Mission by providing you support">
    <meta property="og:image" content="/img/preview-website.png"> <!-- URL to your specific preview image -->
    <meta property="og:url" content="https://www.missionschool.xyz"> <!-- URL of your website -->
    <meta property="og:type" content="website">
    <meta property="og:site_name" content="Mission School">
    <title>Mission School</title>
    <link rel="stylesheet" href="/css/style.css" />

    <!-- Compiled and minified JavaScript -->

    <link
      href="https://fonts.maateen.me/solaiman-lipi/font.css"
      rel="stylesheet"
    />

    <!-- 9420 eii logota ekhn theke change korte hbe kaorn issb er logo  -->
    <link
      rel="shortcut icon"
      href="https://issb-bd.org/imgs/logonew.png"
      type="image/x-icon"
    />
    <!-- fontawesome link kora hoies kintu janina minified kina -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/regular.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/regular.min.css"
    />
    <script type="text/javascript" async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML"></script>
   <!-- Include jQuery library -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>



  </head>



  <style>


.loadbackground {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgb(10 10 10);
      z-index: 9999;
      display: none; /* add this line */
    }
    .load{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);
      /*change these sizes to fit into your project*/
      width:100px;
      height:100px;
    }
    .load hr{border:0;margin:0;width:40%;height:40%;position:absolute;border-radius:50%;animation:spin 2s ease infinite}
    
    .load :first-child{background:#19A68C;animation-delay:-1.5s}
    .load :nth-child(2){background:#F63D3A;animation-delay:-1s}
    .load :nth-child(3){background:#FDA543;animation-delay:-0.5s}
    .load :last-child{background:#193B48}
    
    @keyframes spin{
      0%,100%{transform:translate(0)}
      25%{transform:translate(160%)}
      50%{transform:translate(160%, 160%)}
      75%{transform:translate(0, 160%)}
    }
    
    .qcontainer{
  line-height: 1.5;

}

.active-answer{
    background-color: #40813e5c!important;
  }
    #message {
			display: none;
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
      font-size: 15px;
			padding: 20px;
			background-color: #ffffff;box-shadow: rgba(0, 0, 0, 0.45) 0px 25px 20px -20px;
			color: #6851fd;
			text-align: center;
      border-bottom-right-radius: 10px;
      border-bottom-left-radius: 10px;
		}
    .fr-dib,.fr-fic,.fr-dii{
      max-width: 100%!important;
      height: auto;
}
.input-flex{
  display:flex;
  flex-direction:row;
  justify-content:space;
  align-items:center;
  gap:5px;
  flex-wrap: wrap;
}
.input-label {
  flex-grow: 1; 
  text-align:center;
}
  
    .options {
      
        margin-bottom: 10px;
        padding: 5px;
        border-radius: 5px;
        background-color: rgb(88 77 77 / 18%);
    }

    .custom-radio {
        display: none; /* Hide the default radio input */
    }
    .q-serial {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 25px; 
    height: 25px;
    background-color: #1c1c1c; 
    color: white; 
    border-radius: 50%;
    font-size: 12px; 
    padding: 0 8px; 
    margin-bottom: 7px;
}
    .custom-input {
        display: none;
        width: 15px; /* Adjust width as needed */
        height: 15px; /* Adjust height as needed */
        border: 1px solid black; /* Default border color */
        border-radius: 50%; /* Make it a circle */
        cursor: pointer;
    }

    .custom-radio:checked + label .custom-input {
        background-color: black; /* Set background color when checked */
        border: none; /* Remove border when checked */
    }

    .explainer {
    display: flex;
    justify-content: flex-end;
    align-items: center; /* Align items vertically if needed */
}
.love{
  display: flex;
  flex-direction: row;
  gap: 5px;
}

    </style>
  <body><svg id="wave" style="transform:rotate(180deg); transition: 0.3s" viewBox="0 0 1440 330" version="1.1" xmlns="http://www.w3.org/2000/svg"><defs><linearGradient id="sw-gradient-0" x1="0" x2="0" y1="1" y2="0"><stop stop-color="rgba(108, 1, 255, 1)" offset="0%"></stop><stop stop-color="rgba(32.058, 230.325, 189.351, 1)" offset="100%"></stop></linearGradient></defs><path style="transform:translate(0, 0px); opacity:1" fill="url(#sw-gradient-0)" d="M0,264L48,264C96,264,192,264,288,269.5C384,275,480,286,576,280.5C672,275,768,253,864,203.5C960,154,1056,77,1152,49.5C1248,22,1344,44,1440,93.5C1536,143,1632,220,1728,258.5C1824,297,1920,297,2016,286C2112,275,2208,253,2304,214.5C2400,176,2496,121,2592,88C2688,55,2784,44,2880,38.5C2976,33,3072,33,3168,44C3264,55,3360,77,3456,77C3552,77,3648,55,3744,66C3840,77,3936,121,4032,126.5C4128,132,4224,99,4320,110C4416,121,4512,176,4608,170.5C4704,165,4800,99,4896,110C4992,121,5088,209,5184,214.5C5280,220,5376,143,5472,143C5568,143,5664,220,5760,258.5C5856,297,5952,297,6048,269.5C6144,242,6240,187,6336,137.5C6432,88,6528,44,6624,66C6720,88,6816,176,6864,220L6912,264L6912,330L6864,330C6816,330,6720,330,6624,330C6528,330,6432,330,6336,330C6240,330,6144,330,6048,330C5952,330,5856,330,5760,330C5664,330,5568,330,5472,330C5376,330,5280,330,5184,330C5088,330,4992,330,4896,330C4800,330,4704,330,4608,330C4512,330,4416,330,4320,330C4224,330,4128,330,4032,330C3936,330,3840,330,3744,330C3648,330,3552,330,3456,330C3360,330,3264,330,3168,330C3072,330,2976,330,2880,330C2784,330,2688,330,2592,330C2496,330,2400,330,2304,330C2208,330,2112,330,2016,330C1920,330,1824,330,1728,330C1632,330,1536,330,1440,330C1344,330,1248,330,1152,330C1056,330,960,330,864,330C768,330,672,330,576,330C480,330,384,330,288,330C192,330,96,330,48,330L0,330Z"></path><defs><linearGradient id="sw-gradient-1" x1="0" x2="0" y1="1" y2="0"><stop stop-color="rgba(108, 1, 255, 1)" offset="0%"></stop><stop stop-color="rgba(49.1, 52.791, 116.486, 1)" offset="100%"></stop></linearGradient></defs><path style="transform:translate(0, 50px); opacity:0.9" fill="url(#sw-gradient-1)" d="M0,132L48,126.5C96,121,192,110,288,88C384,66,480,33,576,27.5C672,22,768,44,864,77C960,110,1056,154,1152,176C1248,198,1344,198,1440,214.5C1536,231,1632,264,1728,280.5C1824,297,1920,297,2016,269.5C2112,242,2208,187,2304,170.5C2400,154,2496,176,2592,176C2688,176,2784,154,2880,170.5C2976,187,3072,242,3168,242C3264,242,3360,187,3456,154C3552,121,3648,110,3744,88C3840,66,3936,33,4032,44C4128,55,4224,110,4320,110C4416,110,4512,55,4608,77C4704,99,4800,198,4896,231C4992,264,5088,231,5184,203.5C5280,176,5376,154,5472,126.5C5568,99,5664,66,5760,93.5C5856,121,5952,209,6048,214.5C6144,220,6240,143,6336,126.5C6432,110,6528,154,6624,143C6720,132,6816,66,6864,33L6912,0L6912,330L6864,330C6816,330,6720,330,6624,330C6528,330,6432,330,6336,330C6240,330,6144,330,6048,330C5952,330,5856,330,5760,330C5664,330,5568,330,5472,330C5376,330,5280,330,5184,330C5088,330,4992,330,4896,330C4800,330,4704,330,4608,330C4512,330,4416,330,4320,330C4224,330,4128,330,4032,330C3936,330,3840,330,3744,330C3648,330,3552,330,3456,330C3360,330,3264,330,3168,330C3072,330,2976,330,2880,330C2784,330,2688,330,2592,330C2496,330,2400,330,2304,330C2208,330,2112,330,2016,330C1920,330,1824,330,1728,330C1632,330,1536,330,1440,330C1344,330,1248,330,1152,330C1056,330,960,330,864,330C768,330,672,330,576,330C480,330,384,330,288,330C192,330,96,330,48,330L0,330Z"></path></svg>
	
    <div class="instruction">

    <h2 style="text-align: center; padding: 10px 20px 10px 20px;"><%= data.exam_name %></h2>
		<p>Total Questions- <%= data.questions.length %> || Marks- <%= data.questions.length %></p>
		<p>Duration- <%= data.time %>min</p>
	</div>	
  <section class="questions-box">
    <form action="/quiz-result/<%= data.exam_code %>" method="post" id="form-id">
        <% let serial = 1; %>
        <% content.forEach(function(question) { %>
            <!-- order: <%= question.order %> -->
            <% let counter = 1; %>
            <% if (question.field_type === 'choice') { %>
            <div class="qcontainer" id="question<%= serial %>">
                <p>
                    <span class="q-serial"><%- serial %></span>
                    <%- question.question %>
                </p>
                <br>
                <div class="input-flex">
                <% question.option.forEach((option) => { %>
                  <label class="input-label" for="<%= question._id %><%= counter %>">
                    <div class="options">
                     
                        <input
                            type="radio"
                            name="<%= question._id %>"
                            value="<%= counter %>"
                            id="<%= question._id %><%= counter %>"
                            class="custom-radio"
                        />
                        <label for="<%= question._id %><%= counter %>">
                            <div class="custom-input"></div>
                            
                        </label>
                        
                        <div><%- option %></div>
                     
                    </div>
                  </label>
                
                    <% counter++ %>
                <% }) %>
              </div>
                <input
                    hidden
                    checked
                    type="radio"
                    name="<%= question._id %>"
                    value="0"
                />
                <div class="explainer">
                    <a class="love" href="/doubt/<%= data.exam_code %>?id=<%= question._id %>">
                        <p><%= question.doubts_count %></p>
                        <i class="<%= question.doubt === 0 ? 'fa-regular fa-heart' : 'fa-regular fa-heart' %>"></i>
                    </a>
                </div>
            </div>
            <% serial++; %>

            <% } else if (question.field_type === 'textblock') { %>
              <div class="textblock qcontainer">
                <%- question.question %>
              </div>
            <% } else if (question.field_type === 'short_answer') { %>
              <div class="short-answer qcontainer">
                <%- question.question %>
              </div>
            <% } %>
        <% }) %>
        <input type="text" hidden  name="started-time" id="started-time">
    </form>

    <button class="show-modal submitexam-demo" type="button">End Exam</button>
    <div class="qcontainer">
        <div>
            <p><b>Questions Navigation</b></p>
        </div>
        <div class="easynav">
            <% for (var i = 1; i <= serial -1; i++) { %>
                <p id="<%= i %>" class="scroll scroll<%= i %>"><%= i %></p>
            <% } %>
        </div>
    </div>
    <br />
</section>
  
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const containers = document.querySelectorAll('.qcontainer');

    containers.forEach(container => {
        const options = container.querySelectorAll('.options');

        options.forEach(option => {
            option.addEventListener('click', function() {
                // Remove active-answer class from all options within the same container
                const containerOptions = container.querySelectorAll('.options');
                containerOptions.forEach(opt => {
                    opt.classList.remove('active-answer');
                });
                
                // Add active-answer class to the clicked option
                option.classList.add('active-answer');
            });
        });
    });
});

</script>
	<div id="floatingMenu">
		<div class="">
			<div>
			<p><b>Questions Navigation</b></p>
			</div>
			<div class="easynav-float">
			
				<% for (var i = 1; i <= serial -1 ; i++) { %>
                    <p id="<%= i %>" class="scroll scroll<%= i %>"><%= i %></p>
                <% } %>
			</div>
			<br>
			<input type="submit" value="Submit Exam" class="submitexam">
		</div>
	</div>

    <div id="menuicon">
        <i class="fa-solid fa-list-ol"></i>
    </div>


<!-- stopwatch seciton -->
	<div class="timer">
		<span id="countdown"></span>
		<i class="fa-solid fa-stopwatch"></i>
	  </div>
	  

<!-- show modal -->
<div class="modal-mid">
    <div id="">
		<div class="">
			<div>
			<p><b>Questions Navigation</b></p>
			</div>
      
			<div class="easynav-float">
		
        <% for (var i = 1; i <= serial -1 ; i++) { %>
          <p id="<%= i %>" class="scroll scroll<%= i %>"><%= i %></p>
      <% } %>
			</div>
			<br>
			<input type="submit" value="End Exam" class="submitexam show-modal">
		</div>
	</div>
</div>
<div class="loadbackground">
  <div class="load">
    <hr/><hr/><hr/><hr/>
  </div>
</div>


<!-- 1 min remaining message -->
<div id="message"> 
  <h2 style="color:rgb(255, 255, 255);">Reminder!</h2>
  <p>আপনার হাতে আর ১ মিনিট সময় আছে! যেসব  উত্তর করা হয়নি রিভিউ করে নিতে পারেন।</p>
</div>
 <!-- bottom nagivatoin section  -->


 <%- include('../partials/bottom-nav.ejs') %>

  </body>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
  <script>

    
$(document).ready(function(){
  $("#menuicon").on("click", function(event){
    event.stopPropagation(); // Prevent the click event from reaching the document
    $("#floatingMenu").fadeToggle(100);
  });

  $("#floatingMenu").on("click", function(event) {
    event.stopPropagation(); // Prevent the click event from reaching the document
  });

  $(document).on("click", function(event) {
    // Check if the clicked element is not a descendant of #floatingMenu or #menuicon
    if (!$(event.target).closest("#floatingMenu, #menuicon").length) {
      $("#floatingMenu").fadeOut(0);
    }
  });
});



</script>



	
 
</html>
<script>

let startingTimeInMinutes = <%= data.time %>; // Set the exam duration in minutes
let examStartTime = new Date(); // Capture the exam start time

let time = startingTimeInMinutes * 60; // Convert minutes to seconds
let refreshIntervalId = setInterval(updateCountdown, 1000); // Update every 1 second

function updateCountdown() {
  const currentTime = new Date();
  const elapsedTimeInSeconds = Math.floor((currentTime - examStartTime) / 1000);
  let remainingTimeInSeconds = time - elapsedTimeInSeconds;

  if (remainingTimeInSeconds < 0) {
    remainingTimeInSeconds = 0; // Ensure remaining time is not negative
  }

  const minutes = Math.floor(remainingTimeInSeconds / 60);
  let seconds = remainingTimeInSeconds % 60;

  seconds = seconds < 10 ? "0" + seconds : seconds;
  const countdownEl = document.getElementById("countdown");
  const startedTimeEl = document.getElementById("started-time");

  // Error handling
  if (!countdownEl || !startedTimeEl) {
    console.error("Countdown or started-time element not found");
    clearInterval(refreshIntervalId);
    return;
  }

  startedTimeEl.value = formatTime(elapsedTimeInSeconds); // Update started-time input field

  if (minutes >= 1) {
    countdownEl.innerHTML = `${minutes} min : ${seconds} sec`;
  } else {
    countdownEl.innerHTML = `${seconds} sec`;
  }
  countdownEl.value = remainingTimeInSeconds;

  if (remainingTimeInSeconds === 60) {
    $('#message').slideDown();
    setTimeout(function () {
      $('#message').slideUp();
    }, 10000);
  }

  if (remainingTimeInSeconds <= 0) {
    // Stop the setInterval when time = 0 to avoid negative time
    clearInterval(refreshIntervalId);
    countdownEl.value = remainingTimeInSeconds + 1;
    document.getElementById("form-id").submit();
    $('.loadbackground').fadeIn();

  }
}

function formatTime(seconds) {
  const remainingMinutes = Math.floor(seconds / 60);
  const remainingSeconds = seconds % 60;

  return `${remainingMinutes} min : ${remainingSeconds} sec`;
}

const submitexams = document.querySelectorAll('.submitexam');
submitexams.forEach((submitexam) => {
  submitexam.addEventListener('click', (event) => {
    event.preventDefault();
    document.getElementById("form-id").submit();
    $('.loadbackground').fadeIn();
  });
});




    $(document).on('click', '.love', function(event) {
  event.preventDefault(); // prevent the default behavior of the link

  var form = $(this);
  var url = form.attr("href"); // add "/remove" to the end of the URL
  
  var icon = form.find('i'); // get the heart icon inside the clicked element
      var count = form.find('p'); // get the p tag inside the clicked element
      if (icon.hasClass('fa-solid')) { // if the icon is solid
        icon.removeClass('fa-solid').addClass('fa-regular'); // remove the solid class and add the regular class
        count.text(parseInt(count.text()) - 1); // decrement the doubts_count value by 1
      } else { // if the icon is regular
        icon.removeClass('fa-regular').addClass('fa-solid'); // remove the regular class and add the solid class
        count.text(parseInt(count.text()) + 1); // increment the doubts_count value by 1
      }
      icon.addClass('shake'); // add the shake class to the heart icon
      setTimeout(function() {
        icon.removeClass('shake'); // remove the shake class from the heart icon after 500ms
      }, 500);
      icon.addClass('wave'); // add the wave class to the heart icon
      setTimeout(function() {
        icon.removeClass('wave'); // remove the wave class from the heart icon after 800ms
      }, 800);


  $.ajax({
    type: "get",
    url: url,
    success: function(value) {
            console.log('data updated successfully');
    },
    error: function(error) {
      console.log(error);
    }
  });
});

$(document).ready(function() {
  // Scroll to section when a p tag is clicked
  $(".scroll").click(function(event) {
    event.preventDefault(); // prevent the default behavior of the click event
    var id = $(this).attr("id"); // get the id of the clicked p tag
    
    var section = $("#question" + id); // get the corresponding section using the id
    var divPosition = $(section).offset().top;
    $('html, body').animate({ scrollTop: divPosition - 250
    }, 1000);
  });
});


$(document).ready(function() {
    $('.explain').click(function() {
  $(this).closest('.qcontainer').find('.explain-toggle').slideToggle(200);
});


});



// Get all radio buttons
const radioButtons = document.querySelectorAll('input[type="radio"]');

// Add event listener to each radio button
radioButtons.forEach(radio => {
  radio.addEventListener('click', function() {
    // Check if the radio button is checked
    if (this.checked) {
      // Find the closest parent div with class "qcontainer"
      const qContainer = this.closest('.qcontainer');
      // Get the class ID from the qContainer
      const classId = qContainer.getAttribute('id');
      // Remove the "question" prefix from the class ID
      const questionId = classId.replace('question', '');
      // Find all p tags with the same class as the matching question
      const pTags = document.querySelectorAll(`.scroll${questionId}`);
      // Set the color of each p tag to red
      pTags.forEach(pTag => {
        pTag.style.background = 'rgb(62 137 105 / 61%)';
      });
    }
  });
});




  </script>
<script>
    	
let modal = $('.modal-mid');
$('.show-modal').click(function() {
	let examCode = $(this).data('exam-code');
  modal.fadeToggle(100);
});

$(document).mousedown(function(event) {
  // Check if the target of the click event is not the modal element itself
  if (!$(event.target).closest(".modal-mid").length &&
      !$(event.target).is('.show-modal')) {
    modal.fadeOut(100);
  }
});





// document.querySelector('#submit-button').addEventListener('click', function() {
// 			document.querySelector('.spinner').style.display = 'block';
// 			document.querySelector('#my-form').submit();
// 		});




// Get all the radio buttons
const radioBtns = document.querySelectorAll('input[type="radio"]');

// Add event listener for each radio button
radioBtns.forEach(radioBtn => {
  radioBtn.addEventListener('change', function() {
    if (this.checked) {
      // Get the label element that is a sibling of this radio button
      const label = this.parentNode;
      
      // Get the parent label element of the sibling label
      const parentLabel = label.parentNode;
      
      // Add the "checked" class to the parent label
      parentLabel.classList.add('checked');
    } else {
      // If the radio button is unchecked, remove the "checked" class from the parent label
      const label = this.parentNode;
      const parentLabel = label.parentNode;
      parentLabel.classList.remove('checked');
    }
  });
});



</script>


<script>
  // Wait for the DOM to be ready
  document.addEventListener('DOMContentLoaded', function () {
    // Get all <p> tags with data-f-id="pbf"
    const elementsToRemove = document.querySelectorAll('p[data-f-id="pbf"]');

    // Iterate through the selected elements and remove them
    elementsToRemove.forEach(element => {
      element.remove();
    });
  });
</script>
<script>
  MathJax.Hub.Config({
    jax: ["input/AsciiMath", "output/CommonHTML"],
    extensions: ["asciimath2jax.js"],
    asciimath2jax: {
      delimiters: [["`", "`"]],
      skipTags: ["script", "noscript", "style", "textarea", "pre", "code"]
    },
    "CommonHTML": {
      scale: 90,
      linebreaks: { automatic: true },
      font: "STIX-Web" // Replace with your desired font
    }
  });
  // Find all elements with the class "mathy"
  const mathjaxEquationElements = document.querySelectorAll('.mathy');
  
  // Loop through each element and wrap its inner HTML in backticks
  mathjaxEquationElements.forEach(element => {
   const innerHTML = element.innerHTML;
   element.innerHTML = '`' + innerHTML + '`';
  });
  </script>
